{"ast":null,"code":"import React,{useEffect,useState}from'react';import{fetchSystemMetrics}from'../services/api';import{Line,Bar}from'react-chartjs-2';import'chart.js/auto';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DataDashboard=()=>{const[metrics,setMetrics]=useState({});useEffect(()=>{const getMetrics=async()=>{const data=await fetchSystemMetrics();setMetrics(data);};getMetrics();const interval=setInterval(getMetrics,15000);// Update every 15 seconds\nreturn()=>clearInterval(interval);},[]);const lineData={labels:metrics.timestamps||[],datasets:[{label:'CPU Usage',data:metrics.cpu_usage||[],borderColor:'rgba(75,192,192,1)',fill:false},{label:'Memory Usage',data:metrics.memory_usage||[],borderColor:'rgba(153,102,255,1)',fill:false}]};const barData={labels:['Success Rate','Error Rate'],datasets:[{label:'Metrics',data:[metrics.success_rate?metrics.success_rate*100:0,metrics.error_rate?metrics.error_rate*100:0],backgroundColor:['rgba(75, 192, 192, 0.6)','rgba(255, 99, 132, 0.6)']}]};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Data Dashboard\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Line,{data:lineData})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Bar,{data:barData})})]});};export default DataDashboard;","map":{"version":3,"names":["React","useEffect","useState","fetchSystemMetrics","Line","Bar","jsx","_jsx","jsxs","_jsxs","DataDashboard","metrics","setMetrics","getMetrics","data","interval","setInterval","clearInterval","lineData","labels","timestamps","datasets","label","cpu_usage","borderColor","fill","memory_usage","barData","success_rate","error_rate","backgroundColor","children"],"sources":["C:/Users/rober/projects/jewelry_scraper/frontend/src/components/DataDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchSystemMetrics } from '../services/api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst DataDashboard = () => {\n    const [metrics, setMetrics] = useState({});\n\n    useEffect(() => {\n        const getMetrics = async () => {\n            const data = await fetchSystemMetrics();\n            setMetrics(data);\n        };\n        getMetrics();\n        const interval = setInterval(getMetrics, 15000); // Update every 15 seconds\n        return () => clearInterval(interval);\n    }, []);\n\n    const lineData = {\n        labels: metrics.timestamps || [],\n        datasets: [\n            {\n                label: 'CPU Usage',\n                data: metrics.cpu_usage || [],\n                borderColor: 'rgba(75,192,192,1)',\n                fill: false,\n            },\n            {\n                label: 'Memory Usage',\n                data: metrics.memory_usage || [],\n                borderColor: 'rgba(153,102,255,1)',\n                fill: false,\n            },\n        ],\n    };\n\n    const barData = {\n        labels: ['Success Rate', 'Error Rate'],\n        datasets: [\n            {\n                label: 'Metrics',\n                data: [\n                    metrics.success_rate ? metrics.success_rate * 100 : 0,\n                    metrics.error_rate ? metrics.error_rate * 100 : 0\n                ],\n                backgroundColor: [\n                    'rgba(75, 192, 192, 0.6)',\n                    'rgba(255, 99, 132, 0.6)'\n                ],\n            },\n        ],\n    };\n\n    return (\n        <div>\n            <h2>Data Dashboard</h2>\n            <div>\n                <Line data={lineData} />\n            </div>\n            <div>\n                <Bar data={barData} />\n            </div>\n        </div>\n    );\n};\n\nexport default DataDashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,kBAAkB,KAAQ,iBAAiB,CACpD,OAASC,IAAI,CAAEC,GAAG,KAAQ,iBAAiB,CAC3C,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAE1CD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAY,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAX,kBAAkB,CAAC,CAAC,CACvCS,UAAU,CAACE,IAAI,CAAC,CACpB,CAAC,CACDD,UAAU,CAAC,CAAC,CACZ,KAAM,CAAAE,QAAQ,CAAGC,WAAW,CAACH,UAAU,CAAE,KAAK,CAAC,CAAE;AACjD,MAAO,IAAMI,aAAa,CAACF,QAAQ,CAAC,CACxC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,QAAQ,CAAG,CACbC,MAAM,CAAER,OAAO,CAACS,UAAU,EAAI,EAAE,CAChCC,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,WAAW,CAClBR,IAAI,CAAEH,OAAO,CAACY,SAAS,EAAI,EAAE,CAC7BC,WAAW,CAAE,oBAAoB,CACjCC,IAAI,CAAE,KACV,CAAC,CACD,CACIH,KAAK,CAAE,cAAc,CACrBR,IAAI,CAAEH,OAAO,CAACe,YAAY,EAAI,EAAE,CAChCF,WAAW,CAAE,qBAAqB,CAClCC,IAAI,CAAE,KACV,CAAC,CAET,CAAC,CAED,KAAM,CAAAE,OAAO,CAAG,CACZR,MAAM,CAAE,CAAC,cAAc,CAAE,YAAY,CAAC,CACtCE,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,SAAS,CAChBR,IAAI,CAAE,CACFH,OAAO,CAACiB,YAAY,CAAGjB,OAAO,CAACiB,YAAY,CAAG,GAAG,CAAG,CAAC,CACrDjB,OAAO,CAACkB,UAAU,CAAGlB,OAAO,CAACkB,UAAU,CAAG,GAAG,CAAG,CAAC,CACpD,CACDC,eAAe,CAAE,CACb,yBAAyB,CACzB,yBAAyB,CAEjC,CAAC,CAET,CAAC,CAED,mBACIrB,KAAA,QAAAsB,QAAA,eACIxB,IAAA,OAAAwB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBxB,IAAA,QAAAwB,QAAA,cACIxB,IAAA,CAACH,IAAI,EAACU,IAAI,CAAEI,QAAS,CAAE,CAAC,CACvB,CAAC,cACNX,IAAA,QAAAwB,QAAA,cACIxB,IAAA,CAACF,GAAG,EAACS,IAAI,CAAEa,OAAQ,CAAE,CAAC,CACrB,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}