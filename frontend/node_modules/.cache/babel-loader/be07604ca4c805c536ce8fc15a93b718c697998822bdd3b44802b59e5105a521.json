{"ast":null,"code":"import _objectSpread from\"C:/Users/rober/projects/jewelry_scraper/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useContext}from'react';import{AppContext}from'../context/AppContext';import{initiateScraping}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EnhancedSearch=()=>{const{setState}=useContext(AppContext);const[query,setQuery]=useState('');const[platform,setPlatform]=useState('ebay');const[maxItems,setMaxItems]=useState(100);const handleSearch=async()=>{setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:true}));try{await initiateScraping(query,platform,maxItems);// Optionally, poll for scraping completion or provide feedback\nalert('Scraping started successfully.');}catch(error){alert('Failed to start scraping.');}finally{setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:false}));}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enhanced Search\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"Search for jewelry...\"}),/*#__PURE__*/_jsxs(\"select\",{value:platform,onChange:e=>setPlatform(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"ebay\",children:\"eBay\"}),/*#__PURE__*/_jsx(\"option\",{value:\"amazon\",children:\"Amazon\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:maxItems,onChange:e=>setMaxItems(parseInt(e.target.value)),placeholder:\"Max Items\",min:\"1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,children:\"Search\"})]});};export default EnhancedSearch;","map":{"version":3,"names":["React","useState","useContext","AppContext","initiateScraping","jsx","_jsx","jsxs","_jsxs","EnhancedSearch","setState","query","setQuery","platform","setPlatform","maxItems","setMaxItems","handleSearch","prev","_objectSpread","loading","alert","error","children","type","value","onChange","e","target","placeholder","parseInt","min","onClick"],"sources":["C:/Users/rober/projects/jewelry_scraper/frontend/src/components/EnhancedSearch.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { initiateScraping } from '../services/api';\n\nconst EnhancedSearch = () => {\n    const { setState } = useContext(AppContext);\n    const [query, setQuery] = useState('');\n    const [platform, setPlatform] = useState('ebay');\n    const [maxItems, setMaxItems] = useState(100);\n\n    const handleSearch = async () => {\n        setState(prev => ({ ...prev, loading: true }));\n        try {\n            await initiateScraping(query, platform, maxItems);\n            // Optionally, poll for scraping completion or provide feedback\n            alert('Scraping started successfully.');\n        } catch (error) {\n            alert('Failed to start scraping.');\n        } finally {\n            setState(prev => ({ ...prev, loading: false }));\n        }\n    };\n\n    return (\n        <div>\n            <h2>Enhanced Search</h2>\n            <input \n                type=\"text\" \n                value={query} \n                onChange={(e) => setQuery(e.target.value)} \n                placeholder=\"Search for jewelry...\" \n            />\n            <select value={platform} onChange={(e) => setPlatform(e.target.value)}>\n                <option value=\"ebay\">eBay</option>\n                <option value=\"amazon\">Amazon</option>\n            </select>\n            <input \n                type=\"number\" \n                value={maxItems} \n                onChange={(e) => setMaxItems(parseInt(e.target.value))} \n                placeholder=\"Max Items\" \n                min=\"1\"\n            />\n            <button onClick={handleSearch}>Search</button>\n        </div>\n    );\n};\n\nexport default EnhancedSearch;\r\n"],"mappings":"qIAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,OAASC,UAAU,KAAQ,uBAAuB,CAClD,OAASC,gBAAgB,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAEC,QAAS,CAAC,CAAGR,UAAU,CAACC,UAAU,CAAC,CAC3C,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,MAAM,CAAC,CAChD,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,GAAG,CAAC,CAE7C,KAAM,CAAAgB,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7BP,QAAQ,CAACQ,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEE,OAAO,CAAE,IAAI,EAAG,CAAC,CAC9C,GAAI,CACA,KAAM,CAAAhB,gBAAgB,CAACO,KAAK,CAAEE,QAAQ,CAAEE,QAAQ,CAAC,CACjD;AACAM,KAAK,CAAC,gCAAgC,CAAC,CAC3C,CAAE,MAAOC,KAAK,CAAE,CACZD,KAAK,CAAC,2BAA2B,CAAC,CACtC,CAAC,OAAS,CACNX,QAAQ,CAACQ,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEE,OAAO,CAAE,KAAK,EAAG,CAAC,CACnD,CACJ,CAAC,CAED,mBACIZ,KAAA,QAAAe,QAAA,eACIjB,IAAA,OAAAiB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBjB,IAAA,UACIkB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEd,KAAM,CACbe,QAAQ,CAAGC,CAAC,EAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,WAAW,CAAC,uBAAuB,CACtC,CAAC,cACFrB,KAAA,WAAQiB,KAAK,CAAEZ,QAAS,CAACa,QAAQ,CAAGC,CAAC,EAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAF,QAAA,eAClEjB,IAAA,WAAQmB,KAAK,CAAC,MAAM,CAAAF,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClCjB,IAAA,WAAQmB,KAAK,CAAC,QAAQ,CAAAF,QAAA,CAAC,QAAM,CAAQ,CAAC,EAClC,CAAC,cACTjB,IAAA,UACIkB,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAEV,QAAS,CAChBW,QAAQ,CAAGC,CAAC,EAAKX,WAAW,CAACc,QAAQ,CAACH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE,CACvDI,WAAW,CAAC,WAAW,CACvBE,GAAG,CAAC,GAAG,CACV,CAAC,cACFzB,IAAA,WAAQ0B,OAAO,CAAEf,YAAa,CAAAM,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC7C,CAAC,CAEd,CAAC,CAED,cAAe,CAAAd,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}