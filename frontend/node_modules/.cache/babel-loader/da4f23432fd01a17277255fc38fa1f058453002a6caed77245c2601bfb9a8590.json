{"ast":null,"code":"// src/services/api.js\nimport axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;export const fetchProducts=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/products\"));return response.data;}catch(error){console.error('Error fetching products:',error);throw error;// Optional: Rethrow the error after logging\n}};export const initiateScraping=async(query,platform,maxItems)=>{try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/scrape\"),{query,platform,max_items:maxItems});return response.data;}catch(error){console.error('Error initiating scraping:',error);throw error;}};export const fetchSystemMetrics=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/metrics\"));return response.data;}catch(error){console.error('Error fetching system metrics:',error);throw error;}};// Add more API service functions as needed","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchProducts","response","get","concat","data","error","console","initiateScraping","query","platform","maxItems","post","max_items","fetchSystemMetrics"],"sources":["C:/Users/rober/projects/jewelry_scraper/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\n\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const fetchProducts = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/products`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching products:', error);\n        throw error; // Optional: Rethrow the error after logging\n    }\n};\n\nexport const initiateScraping = async (query, platform, maxItems) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/scrape`, {\n            query,\n            platform,\n            max_items: maxItems\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error initiating scraping:', error);\n        throw error;\n    }\n};\n\nexport const fetchSystemMetrics = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/metrics`);\n\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching system metrics:', error);\n        throw error;\n    }\n};\n\n// Add more API service functions as needed\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAEvD,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,KAAK,CAACO,GAAG,IAAAC,MAAA,CAAIP,YAAY,aAAW,CAAC,CAC5D,MAAO,CAAAK,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CAAE;AACjB,CACJ,CAAC,CAED,MAAO,MAAM,CAAAE,gBAAgB,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,CAAEC,QAAQ,GAAK,CACjE,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAN,KAAK,CAACgB,IAAI,IAAAR,MAAA,CAAIP,YAAY,YAAW,CACxDY,KAAK,CACLC,QAAQ,CACRG,SAAS,CAAEF,QACf,CAAC,CAAC,CACF,MAAO,CAAAT,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAED,MAAO,MAAM,CAAAQ,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CAC1C,GAAI,CACA,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAN,KAAK,CAACO,GAAG,IAAAC,MAAA,CAAIP,YAAY,YAAU,CAAC,CAE3D,MAAO,CAAAK,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}