version: "3.8"

services:
  backend:
    build: ./backend
    container_name: jewelry_scraper_backend
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
      - db
    networks:
      - jewelry_network

  frontend:
    build: ./frontend
    container_name: jewelry_scraper_frontend
    restart: always
    env_file:
      - .env
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - jewelry_network

  db:
    image: postgres:13
    container_name: jewelry_scraper_db
    restart: always
    environment:
      POSTGRES_USER: bobby
      POSTGRES_PASSWORD: 8040
      POSTGRES_DB: jewelry_scraper
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - jewelry_network

  redis:
    image: redis:6
    container_name: jewelry_scraper_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - jewelry_network

  prometheus:
    image: prom/prometheus
    container_name: jewelry_scraper_prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - jewelry_network

  grafana:
    image: grafana/grafana
    container_name: jewelry_scraper_grafana
    restart: always
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - jewelry_network

  nginx:
    image: nginx:latest
    container_name: jewelry_scraper_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs
    depends_on:
      - frontend
      - backend
    networks:
      - jewelry_network

  socketio:
    build: ./backend
    container_name: jewelry_scraper_socketio
    restart: always
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - backend
      - redis
      - db
    networks:
      - jewelry_network

networks:
  jewelry_network:
    driver: bridge

volumes:
  db_data:
  grafana_data:
